name: Build and Push Image for OSR

on:
  push:
    branches:
      - main

jobs:
    detect-changes:
        name: üîç Detect Changed Paths
        runs-on: ubuntu-latest
        outputs:
            matrix: ${{ steps.set-matrix.outputs.matrix }}
        steps:
            - name: üõéÔ∏è Checkout Repository
              uses: actions/checkout@v5

            - name: Get changed files
              id: changed-files
              uses: tj-actions/changed-files@v47
              with:
                files_yaml: |
                  apps:
                    - frontend/**
                    - backend/**
                json: true
                quotepath: false
                dir_names: true
                dir_names_max_depth: 1

            - name: List chart changed files
              run: echo '${{ steps.changed-files.outputs.apps_all_changed_files }}'
            - id: set-matrix
              run: echo "matrix={\"files\":${{ steps.changed-files.outputs.apps_all_changed_files }}}" >> "$GITHUB_OUTPUT"                
      

    build-and-push:
        name: üõ†Ô∏è Build & Push Docker Images
        needs: detect-changes
        if: ${{ toJson(fromJson(needs.detect-changes.outputs.matrix).files) != '[]' }}
        environment: Registry
        runs-on: ubuntu-latest
        strategy:
            matrix: ${{ fromJSON(needs.detect-changes.outputs.matrix) }}

        steps:
        - name: üõéÔ∏è Checkout repository
          uses: actions/checkout@v5

        - name: üß∞ Set up QEMU
          uses: docker/setup-qemu-action@v3

        - name: üõ†Ô∏è Set up Docker Buildx
          uses: docker/setup-buildx-action@v3

        - name: üîê Log in to Docker registry
          uses: docker/login-action@v3
          with:
            registry: ${{ vars.REGISTRY_URL }}
            username: ${{ secrets.REGISTRY_USERNAME }}
            password: ${{ secrets.REGISTRY_PASSWORD }}

        - name: üìöCreate env file
          working-directory: ${{ matrix.files }}
          run: |
              touch .env
              export VITE_VERSION=$(jq -r .version ./package.json)
              cat << EOF > .env
              # Frontend
              VITE_VERSION=${VITE_VERSION}
              VITE_API_URL=https://api.spectrum.opinions-sur-rue.fr
              VITE_PUBLIC_URL=https://spectrum.opinions-sur-rue.fr
              VITE_ENABLE_AUDIO=true
              VITE_LOGO_URL=${{ vars.VITE_LOGO_URL }}
              VITE_LOGO_WIDTH=${{ vars.VITE_LOGO_WIDTH }}
              VITE_HEADER_TITLE=${{ vars.VITE_HEADER_TITLE }}
              VITE_OFFSET_SUBTITLE=${{ vars.VITE_OFFSET_SUBTITLE }}

              # Backend
              API_PORT=3000
              API_VERSION=1.0.0
              EOF

        - name: üì¶ Build and push Docker image
          uses: docker/build-push-action@v6
          with:
            context: ${{ matrix.files }}
            push: true
            tags: |
                ${{ vars.REGISTRY_URL }}/spectrum-${{ matrix.files }}:latest,
                ${{ vars.REGISTRY_URL }}/spectrum-${{ matrix.files }}:${{ github.sha }}
                